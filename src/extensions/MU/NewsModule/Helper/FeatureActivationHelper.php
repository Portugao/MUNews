<?php

/**
 * News.
 *
 * @copyright Michael Ueberschaer (MU)
 * @license http://www.gnu.org/licenses/lgpl.html GNU Lesser General Public License
 * @author Michael Ueberschaer <info@homepages-mit-zikula.de>.
 *
 * @see https://homepages-mit-zikula.de
 * @see https://ziku.la
 *
 * @version Generated by ModuleStudio (https://modulestudio.de).
 */

declare(strict_types=1);

namespace MU\NewsModule\Helper;

use MU\NewsModule\Helper\Base\AbstractFeatureActivationHelper;
use Zikula\ExtensionsModule\Api\ApiInterface\VariableApiInterface;

/**
 * Helper implementation class for dynamic feature enablement methods.
 */
class FeatureActivationHelper extends AbstractFeatureActivationHelper
{
    /**
     * CREATORS feature.
     */
    public const CREATORS = 'creators';

    /**
     * CREATEDDATES feature.
     */
    public const CREATEDDATES = 'createddates';

    /**
     * @var VariableApiInterface
     */
    private $variableApi;

    public function __construct(VariableApiInterface $variableApi)
    {
        $this->variableApi = $variableApi;
    }

    public function isEnabled(string $feature = '', string $objectType = ''): bool
    {
        if (in_array($feature, [self::CATEGORIES, self::ATTRIBUTES, self::TRANSLATIONS], true)) {
            return parent::isEnabled($feature, $objectType);
        }

        if (self::CREATORS === $feature) {
            $method = 'hasCreators';
            if (method_exists($this, $method)) {
                return $this->$method($objectType);
            }
        
            return in_array($objectType, ['message'], true);
        }

        if (self::CREATEDDATES === $feature) {
            $method = 'hasCreatedDates';
            if (method_exists($this, $method)) {
                return $this->$method($objectType);
            }
        
            return in_array($objectType, ['message'], true);
        }

        return false;
    }
    
    public function hasCategories(string $objectType): bool
    {
        return 'message' === $objectType
            && $this->variableApi->get('MUNewsModule', 'enableCategorization', false)
        ;
    }
    
    public function hasAttributes(string $objectType): bool
    {
        return 'message' === $objectType
            && $this->variableApi->get('MUNewsModule', 'enableAttribution', false)
        ;
    }
    
    public function hasTranslations(string $objectType): bool
    {
        return 'message' === $objectType
            && $this->variableApi->get('MUNewsModule', 'enableMultiLanguage', false)
        ;
    }
    
    public function hasCreators(string $objectType): bool
    {
        return 'message' === $objectType
            && $this->variableApi->get('MUNewsModule', 'showAuthor', false)
        ;
    }
    
    public function hasCreatedDates(string $objectType): bool
    {
        return 'message' === $objectType
            && $this->variableApi->get('MUNewsModule', 'showDate', false)
        ;
    }
}
