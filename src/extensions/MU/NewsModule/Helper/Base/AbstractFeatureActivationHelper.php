<?php

/**
 * News.
 *
 * @copyright Michael Ueberschaer (MU)
 * @license http://www.gnu.org/licenses/lgpl.html GNU Lesser General Public License
 * @author Michael Ueberschaer <info@homepages-mit-zikula.de>.
 *
 * @see https://homepages-mit-zikula.de
 * @see https://ziku.la
 *
 * @version Generated by ModuleStudio (https://modulestudio.de).
 */

declare(strict_types=1);

namespace MU\NewsModule\Helper\Base;

/**
 * Helper base class for dynamic feature enablement methods.
 */
abstract class AbstractFeatureActivationHelper
{
    /**
     * Categorisation feature.
     */
    public const CATEGORIES = 'categories';
    
    /**
     * Attribution feature.
     */
    public const ATTRIBUTES = 'attributes';
    
    /**
     * Translation feature.
     */
    public const TRANSLATIONS = 'translations';
    
    /**
     * This method checks whether a certain feature is enabled for a given entity type or not.
     */
    public function isEnabled(string $feature = '', string $objectType = ''): bool
    {
        if (self::CATEGORIES === $feature) {
            $method = 'hasCategories';
            if (method_exists($this, $method)) {
                return $this->$method($objectType);
            }
    
            return in_array($objectType, ['message'], true);
        }
        if (self::ATTRIBUTES === $feature) {
            $method = 'hasAttributes';
            if (method_exists($this, $method)) {
                return $this->$method($objectType);
            }
    
            return in_array($objectType, ['message'], true);
        }
        if (self::TRANSLATIONS === $feature) {
            $method = 'hasTranslations';
            if (method_exists($this, $method)) {
                return $this->$method($objectType);
            }
    
            return in_array($objectType, ['message'], true);
        }
    
        return false;
    }
}
