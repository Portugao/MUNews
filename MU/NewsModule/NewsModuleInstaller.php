<?php
/**
 * News.
 *
 * @copyright Michael Ueberschaer (MU)
 * @license http://www.gnu.org/licenses/lgpl.html GNU Lesser General Public License
 * @author Michael Ueberschaer <info@homepage-mit-zikula.de>.
 * @link https://homepages-mit-zikula.de
 * @link https://ziku.la
 * @version Generated by ModuleStudio (https://modulestudio.de).
 */

namespace MU\NewsModule;

use MU\NewsModule\Base\AbstractNewsModuleInstaller;
use MU\NewsModule\Entity\ImageEntity;

/**
 * Installer implementation class.
 */
class NewsModuleInstaller extends AbstractNewsModuleInstaller
{
    /**
     * @inheritDoc
     */
	public function install()
    {
		parent::install();
		//Check that news table exists in DB
		$connection = $this->entityManager->getConnection();
		$dbName = $this->getDbName();
		$transStmt = $connection->executeQuery("SHOW TABLES LIKE 'news'");
		$valor = $transStmt->fetchAll();

		if(count($valor) == 1){
			//Exists, import data
			ini_set('memory_limit', '2048M');
			ini_set('max_execution_time', 300); // 300 seconds = 5 minutes
			
			//Users
			$userRepository = $this->container->get('zikula_users_module.user_repository');
			$userMap = [];

			//Retrieve data
			$stmt = $connection->executeQuery("
                SELECT *
                FROM $dbName.`news`
                ORDER BY `sid`
            ");

			while ($row = $stmt->fetch()) {
				$new = new MessageEntity();
				$new->setWorkflowState('approved');
				$new->setTitle($row['title']);
				$new->setSlug($row['urltitle']);
				$new->setStartText($row['hometext']);
				$new->setMainText($row['bodytext']);
				$new->setAmountOfViews($row['counter']);
				$new->setAuthor($row['contributor']);
				$new->setNotes($row['notes']);
				$new->setDisplayOnIndex($row['displayonindex']);
				$new->setMessageLanguage($row['language']);
				$new->setAllowComments($row['allowcomments']);
				//$row['format_type']
				$new->setStartDate($row['ffrom']);
				$new->setNoEndDate($row['tto']);
				$uid = $row['approver'];
				if (!isset($userMap[$uid])) {
					$userMap[$uid] = $userRepository->find($uid);
				}
				$new->setApprover($userMap[$uid]);
				$new->setWeight($row['weight']);

				//Standard fields
				$uid = $row['cr_uid'];
				if (!isset($userMap[$uid])) {
					$userMap[$uid] = $userRepository->find($uid);
				}
				$new->setCreatedBy($userMap[$uid]);
				$new->setCreatedDate(new \DateTime($row['cr_date']));
				$uid = $row['lu_uid'];
				if (!isset($userMap[$uid])) {
					$userMap[$uid] = $userRepository->find($uid);
				}
				$new->setUpdatedBy($userMap[$uid]);
				$new->setUpdatedDate(new \DateTime($row['lu_date']));
					
				$this->entityManager->persist($new);
				$this->entityManager->flush($new);
			}
		}
		return true;
	}

	/**
     * @inheritDoc
     */
    public function upgrade($oldVersion)
    {
        if ('1.0.0' === $oldVersion) {
            $this->addFlash('error', 'Update from 1.0.0 to 1.2.0 is not supported. Please update to 1.1.0 first.');

            return false;
        }

        $logger = $this->container->get('logger');
    
        // Upgrade dependent on old version number
        switch ($oldVersion) {
            case '1.1.0':
                // TODO update from 1.1.0 to 1.2.0

            case '1.2.0':
                $this->setVar('defaultMessageSortingBackend', 'articledatetime');

            case '1.2.1':
                try {
                    $this->schemaTool->create([
                        ImageEntity::class
                    ]);
                } catch (\Exception $exception) {
                    $this->addFlash('error', $this->__('Doctrine Exception') . ': ' . $exception->getMessage());
                    $logger->error('{app}: Could not create the database tables during installation. Error details: {errorMessage}.', ['app' => 'MUNewsModule', 'errorMessage' => $exception->getMessage()]);
            
                    return false;
                }
                $this->setVar('enableShrinkingForImageTheFile', false);
                $this->setVar('shrinkWidthImageTheFile', 800);
                $this->setVar('shrinkHeightImageTheFile', 600);
                $this->setVar('thumbnailModeImageTheFile', 'inset');
                $this->setVar('enabledFinderTypes', 'message###image');

            case '1.2.5':
                // for later updates
        }

        // update successful
        return true;
    }
}
